model User {
    id            String    @id @default(cuid())
    name          String
    email         String
    emailVerified Boolean
    image         String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    lastLogin     DateTime?

    accounts           Account[]
    auditLog           AuditLog[]
    integrationResults IntegrationResult[]
    invitations        Invitation[]
    members            Member[]
    risk               Risk[]
    sessions           Session[]
    vendor             Vendor[]
    tasks              Task[]

    @@unique([email])
}

model EmployeeTrainingVideoCompletion {
    id          String    @id @default(cuid())
    completedAt DateTime?
    videoId     String

    memberId String
    member   Member @relation(fields: [memberId], references: [id], onDelete: Cascade)

    @@unique([memberId, videoId])
    @@index([memberId])
}

model Session {
    id                   String   @id @default(cuid())
    expiresAt            DateTime
    token                String
    createdAt            DateTime @default(now())
    updatedAt            DateTime @updatedAt
    ipAddress            String?
    userAgent            String?
    userId               String
    activeOrganizationId String?
    user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([token])
}

model Account {
    id                    String    @id @default(cuid())
    accountId             String
    providerId            String
    userId                String
    user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    accessToken           String?
    refreshToken          String?
    idToken               String?
    accessTokenExpiresAt  DateTime?
    refreshTokenExpiresAt DateTime?
    scope                 String?
    password              String?
    createdAt             DateTime
    updatedAt             DateTime
}

model Verification {
    id         String   @id @default(cuid())
    identifier String
    value      String
    expiresAt  DateTime
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}

model Member {
    id             String       @id @default(cuid())
    organizationId String
    organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
    userId         String
    user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
    role           String
    createdAt      DateTime     @default(now())

    department                      Departments                       @default(none)
    isActive                        Boolean                           @default(true)
    EmployeeTrainingVideoCompletion EmployeeTrainingVideoCompletion[]
    Evidence                        Evidence[]
    Policy                          Policy[]
}

model Invitation {
    id             String       @id @default(cuid())
    organizationId String
    organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
    email          String
    role           String?
    status         String
    expiresAt      DateTime
    inviterId      String
    user           User         @relation(fields: [inviterId], references: [id], onDelete: Cascade)
}

enum Role {
    owner
    admin
    auditor
    employee
}

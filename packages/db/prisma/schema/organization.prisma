model Organization {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  logo      String?
  createdAt DateTime
  metadata  String?
  website   String

  apiKeys                ApiKey[]
  artifacts              Artifact[]
  auditLog               AuditLog[]
  controls               Control[]
  employees              Employee[]
  employeeTrainingVideos EmployeeTrainingVideos[]
  evidence               Evidence[]
  frameworkInstances     FrameworkInstance[]
  integrationLastRun     IntegrationLastRun[]
  integrationResults     IntegrationResult[]
  integrations           Integration[]
  invitations            Invitation[]
  members                Member[]
  policy                 Policy[]
  risk                   Risk[]
  riskAttachment         RiskAttachment[]
  riskComment            RiskComment[]
  riskMitigationTask     RiskMitigationTask[]
  taskAttachment         TaskAttachment[]
  vendorAttachment       VendorAttachment[]
  vendorContact          VendorContact[]
  vendors                Vendor[]
  vendorTask             VendorTask[]
  vendorTaskAssignment   VendorTaskAssignment[]
  vendorTaskAttachment   VendorTaskAttachment[]

  @@index([slug])
}

model Member {
  id             String       @id
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  userId         String
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  role           String
  createdAt      DateTime

  @@map("member")
}

model Invitation {
  id             String       @id
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  email          String
  role           String?
  status         String
  expiresAt      DateTime
  inviterId      String
  user           User         @relation(fields: [inviterId], references: [id], onDelete: Cascade)

  @@map("invitation")
}


model FrameworkInstance {
  id                  String                @id @default(cuid())
  organizationId      String
  frameworkId         String
  status              FrameworkStatus       @default(not_started)
  adoptedAt           DateTime              @default(now())
  lastAssessed        DateTime?
  nextAssessment      DateTime?
  controls            Control[]
  organization        Organization          @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([organizationId, frameworkId])
}


model Control {
  id                             String                           @id @default(cuid())
  organizationId                 String
  controlId                      String
  status                         ComplianceStatus                 @default(not_started)
  lastReviewDate                 DateTime?
  nextReviewDate                 DateTime?
  organizationFrameworkId        String?
  organizationCategoryId         String?
  OrganizationCategory           OrganizationCategory?            @relation(fields: [organizationCategoryId], references: [id])
  OrganizationFramework          OrganizationFramework?           @relation(fields: [organizationFrameworkId], references: [id])
  organization                   Organization                     @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  OrganizationControlRequirement OrganizationControlRequirement[]

  @@index([organizationId])
  @@index([organizationFrameworkId])
  @@index([controlId])
}



model Artifact {
  id                    String          @id @default(cuid())
  content               Json?
  createdAt             DateTime        @default(now())
  description           String?
  fileUrl               String?
  published             Boolean         @default(false)
  type                  RequirementType
  updatedAt             DateTime        @updatedAt

  controlId String
  policyId   String?
  evidenceId String?
  control    Control   @relation(fields: [controlId], references: [id], onDelete: Cascade)
  evidence   Evidence? @relation(fields: [evidenceId], references: [id], onDelete: Cascade)
  policy     Policy?   @relation(fields: [policyId], references: [id], onDelete: Cascade)

  @@unique([controlId])
}


model Evidence {
  id              String       @id @unique @default(cuid())
  name            String
  description     String?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  published       Boolean      @default(false)
  organizationId  String
  additionalUrls  String[]
  evidenceId      String
  fileUrls        String[]
  frequency       Frequency?
  lastPublishedAt DateTime?
  assigneeId      String?
  department      Departments? @default(none)
  isNotRelevant   Boolean      @default(false)

  frameworkId String

  assignee                       User?                            @relation(fields: [assigneeId], references: [id])
  organization                   Organization                     @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@index([organizationId])
  @@index([assigneeId])
}
